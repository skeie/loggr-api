{"version":3,"sources":["../../server/workouts/workoutDao.js"],"names":["Dao","db","dao","createWorkout","exerciseId","userId","console","log","one","updateCurrentWorkout","then","id","catch","error","message","deleteExerciseInWorkout","any","getCurrentWorkout","require","CommonDao","commonDao","module","exports"],"mappings":";;;;;;IAAMA,G,GACJ,aAAYC,EAAZ,EAAgBC,GAAhB,EAAqB;AAAA;;AAAA;;AAAA,OAMrBC,aANqB,GAML,UAACC,UAAD,EAAaC,MAAb,EAAwB;AACtCC,YAAQC,GAAR,CAAY,SAAZ,SAA8BH,UAA9B,yCAA8BA,UAA9B,UAAiDC,MAAjD,yCAAiDA,MAAjD;AACA,WAAO,MAAKJ,EAAL,CAAQO,GAAR,4FAEL,CAACJ,UAAD,EAAaC,MAAb,CAFK,CAAP;AAID,GAZoB;;AAAA,OAcrBI,oBAdqB,GAcE,UAACL,UAAD,EAAaC,MAAb,EAAwB;AAC7CC,YAAQC,GAAR,CAAY,QAAZ,EAAsBH,UAAtB,EAAkCC,MAAlC;AACA,WAAO,MAAKJ,EAAL,CACJO,GADI,wHAGH,CAACJ,UAAD,EAAaC,MAAb,CAHG,EAKJK,IALI,CAKC,gBAAiB;AAAA,UAANC,EAAM,QAANA,EAAM;;AACrB,aAAOA,EAAP;AACD,KAPI,EAQJC,KARI,CAQE,UAASC,KAAT,EAAgB;AACrBP,cAAQC,GAAR,CAAY,QAAZ,EAAsBM,MAAMC,OAAN,IAAiBD,KAAvC,EADqB,CAC0B;AAChD,KAVI,CAAP;AAWD,GA3BoB;;AAAA,OA6BrBE,uBA7BqB,GA6BK,sBAAc;AACtC,WAAO,MAAKd,EAAL,CAAQe,GAAR,uFAEL,CAACZ,UAAD,CAFK,CAAP;AAID,GAlCoB;;AAAA,OAoCrBa,iBApCqB,GAoCD,kBAAU;AAC5B,WAAO,MAAKhB,EAAL,CAAQe,GAAR,0KAIL,CAACX,MAAD,CAJK,CAAP;AAMD,GA3CoB;;AACnB,OAAKJ,EAAL,GAAUA,MAAMiB,QAAQ,qBAAR,EAA+BjB,EAA/C;AACA,MAAMkB,YAAYjB,OAAOgB,QAAQ,eAAR,CAAzB;AACA,OAAKE,SAAL,GAAiB,IAAID,SAAJ,EAAjB;AACD,C;;AA0CHE,OAAOC,OAAP,GAAiBtB,GAAjB","file":"workoutDao.js","sourcesContent":["class Dao {\n  constructor(db, dao) {\n    this.db = db || require(\"../lib/dbConnection\").db;\n    const CommonDao = dao || require(\"../common/dao\");\n    this.commonDao = new CommonDao();\n  }\n\n  createWorkout = (exerciseId, userId) => {\n    console.log('sapdap1', typeof exerciseId, typeof userId)\n    return this.db.one(\n      `INSERT INTO workouts (exercises, users) VALUES (ARRAY[ $1 ], ARRAY [ $2 ]) returning id`,\n      [exerciseId, userId]\n    );\n  };\n\n  updateCurrentWorkout = (exerciseId, userId) => {\n    console.log('sapdap', exerciseId, userId)\n    return this.db\n      .one(\n        `update workouts set exercises = array_append(exercises, $1) where is_active = true and $2 = ANY(users) returning id`,\n        [exerciseId, userId]\n      )\n      .then(function({ id }) {\n        return id;\n      })\n      .catch(function(error) {\n        console.log(\"ERROR:\", error.message || error); // print error;\n      });\n  };\n\n  deleteExerciseInWorkout = exerciseId => {\n    return this.db.any(\n      `update workouts set exercises = array_remove(exercises, $1) where is_active = true`,\n      [exerciseId]\n    );\n  };\n\n  getCurrentWorkout = userId => {\n    return this.db.any(\n      `SELECT distinct e.name, e.id, e.body FROM exercises e JOIN workouts w \n        on e.id = ANY (w.exercises)\n        where w.is_active = true and $1 = ANY (w.users) `,\n      [userId]\n    );\n  };\n}\n\nmodule.exports = Dao;\n"]}