{"version":3,"sources":["../../server/users/userService.js"],"names":["jwtToken","require","Service","dao","commonDao","createUser","getUser","user","email","then","Boolean","ourUser","highscoreService","create","id","generateToken","userDAO","CommonDao","HighscoreService"],"mappings":";;;;;;;;;;AAAA,IAAMA,WAAWC,QAAQ,kBAAR,CAAjB;;IAEqBC,O,GACnB,iBAAYC,GAAZ,EAAiBC,SAAjB,EAA4B;AAAA;;AAAA;;AAAA,OAS5BC,UAT4B,GASf,gBAAQ;AACnB,WAAO,MAAKF,GAAL,CAASG,OAAT,CAAiBC,KAAKC,KAAtB,EAA6BC,IAA7B,CAAkC,mBAAW;AAClD,UAAIC,QAAQC,OAAR,CAAJ,EAAsB;AACpB,cAAKC,gBAAL,CAAsBC,MAAtB,CAA6BF,QAAQG,EAArC,EAAyC,IAAzC,EADoB,CAC4B;AAChD,4BAAYH,OAAZ,IAAqBX,UAAUA,SAASe,aAAT,CAAuBJ,OAAvB,CAA/B;AACD,OAHD,MAGO;AACL,eAAO,MAAKR,GAAL,CAASE,UAAT,CAAoBE,IAApB,EAA0BE,IAA1B,CAA+B,cAAM;AAC1C,gBAAKG,gBAAL,CAAsBC,MAAtB,CAA6BC,EAA7B;AACA,8BACKP,IADL;AAEEO,kBAFF;AAGEd,sBAAUA,SAASe,aAAT,cAA4BR,IAA5B,IAAkCO,MAAlC;AAHZ;AAKD,SAPM,CAAP;AAQD;AACF,KAdM,CAAP;AAeD,GAzB2B;;AAC1B,MAAME,UAAUb,OAAOF,QAAQ,WAAR,CAAvB;AACA,MAAMgB,YAAYb,aAAaH,QAAQ,eAAR,CAA/B;AACA,MAAMiB,mBAAmBjB,QAAQ,+BAAR,CAAzB;AACA,OAAKW,gBAAL,GAAwB,IAAIM,gBAAJ,EAAxB;AACA,OAAKf,GAAL,GAAW,IAAIa,OAAJ,EAAX;AACA,OAAKZ,SAAL,GAAiB,IAAIa,SAAJ,EAAjB;AACD,C;;kBARkBf,O","file":"userService.js","sourcesContent":["const jwtToken = require(\"../util/jwtToken\");\n\nexport default class Service {\n  constructor(dao, commonDao) {\n    const userDAO = dao || require(\"./userDAO\");\n    const CommonDao = commonDao || require(\"../common/dao\");\n    const HighscoreService = require(\"../highscore/highscoreService\");\n    this.highscoreService = new HighscoreService();\n    this.dao = new userDAO();\n    this.commonDao = new CommonDao();\n  }\n\n  createUser = user => {\n    return this.dao.getUser(user.email).then(ourUser => {\n      if (Boolean(ourUser)) {\n        this.highscoreService.create(ourUser.id, true); //legazy, remove me\n        return { ...ourUser, jwtToken: jwtToken.generateToken(ourUser) };\n      } else {\n        return this.dao.createUser(user).then(id => {\n          this.highscoreService.create(id);\n          return {\n            ...user,\n            id,\n            jwtToken: jwtToken.generateToken({ ...user, id })\n          };\n        });\n      }\n    });\n  };\n}\n"]}