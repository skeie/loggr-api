{"version":3,"sources":["../../server/users/userRouter.js"],"names":["router","Router","requireToken","service","createUser","req","res","next","body","then","json","user","catch","console","log","error","sendStatus","getUserById","id","post","get","validate","param","errors","validationErrors","what","JSON","stringify","module","exports"],"mappings":";;;;AAAA;;;;AAEA;;;;AACA;;;;AAFA,IAAMA,SAAS,kBAAQC,MAAR,EAAf;;AAGA,IAAMC,eAAe,4BAArB;AACA,IAAMC,UAAU,2BAAhB;;AAEA,IAAMC,aAAa,SAAbA,UAAa,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACrCJ,UACGC,UADH,CACcC,IAAIG,IADlB,EAEGC,IAFH,CAEQ,gBAAQ;AACZH,QAAII,IAAJ,CAASC,IAAT;AACD,GAJH,EAKGC,KALH,CAKS,iBAAS;AACdC,YAAQC,GAAR,CAAY,OAAZ,EAAqBC,KAArB;;AAEAT,QAAIU,UAAJ,CAAe,GAAf;AACD,GATH;AAUD,CAXD;;AAaA,IAAMC,cAAc,SAAdA,WAAc,CAACZ,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACtCJ,UACGc,WADH,CACeZ,IAAIM,IAAJ,CAASO,EADxB,EAEGT,IAFH,CAEQ,gBAAQ;AACZH,QAAII,IAAJ,CAASC,IAAT;AACD,GAJH,EAKGC,KALH,CAKS,iBAAS;AACdC,YAAQC,GAAR,CAAY,OAAZ,EAAqBC,KAArB;;AAEAT,QAAIU,UAAJ,CAAe,GAAf;AACD,GATH;AAUD,CAXD;;AAaAhB,OAAOmB,IAAP,CAAY,GAAZ,EAAiBf,UAAjB;AACAJ,OAAOoB,GAAP,CAAW,GAAX,EAAgBlB,YAAhB,EAA8Be,WAA9B;;AAEA,IAAMI,WAAW,SAAXA,QAAW,CAACC,KAAD,EAAQjB,GAAR,EAAgB;AAC/B,MAAMkB,SAASlB,IAAImB,gBAAJ,EAAf;;AAEA,MAAID,MAAJ,EAAY;AACVV,YAAQC,GAAR,CAAY,EAAEW,MAAMH,KAAR,EAAeP,OAAOW,KAAKC,SAAL,CAAeJ,MAAf,CAAtB,EAAZ;AACA,wBAAYA,MAAZ;AACD,GAHD,MAGO;AACL,WAAO,EAAP;AACD;AACF,CATD;;AAWAK,OAAOC,OAAP,GAAiB7B,MAAjB","file":"userRouter.js","sourcesContent":["import express from \"express\";\nconst router = express.Router();\nimport Service from \"./userService\";\nimport { requireAuth } from '../util/jwtToken';\nconst requireToken = requireAuth();\nconst service = new Service();\n\nconst createUser = (req, res, next) => {\n  service\n    .createUser(req.body)\n    .then(user => {\n      res.json(user);\n    })\n    .catch(error => {\n      console.log(\"error\", error);\n\n      res.sendStatus(400);\n    });\n};\n\nconst getUserById = (req, res, next) => {\n  service\n    .getUserById(req.user.id)\n    .then(user => {\n      res.json(user);\n    })\n    .catch(error => {\n      console.log(\"error\", error);\n\n      res.sendStatus(400);\n    });\n};\n\nrouter.post(\"/\", createUser);\nrouter.get(\"/\", requireToken, getUserById);\n\nconst validate = (param, req) => {\n  const errors = req.validationErrors();\n\n  if (errors) {\n    console.log({ what: param, error: JSON.stringify(errors) });\n    return { ...errors };\n  } else {\n    return {};\n  }\n};\n\nmodule.exports = router;\n"]}