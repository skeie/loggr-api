{"version":3,"sources":["../../server/exercises/exercisesMapper.js"],"names":["exercisesMapper","exercises","workoutExercises","grouped","exercise","exercise_id","array","Object","keys","map","key","sorted","sort","a","b","Date","updated","id","element","metaData","name","sets","isInWorkout","some","workoutExercise","exerciseMapper","returnExercise","exerciseId","body","index"],"mappings":";;;;;;;AAAA;;;;;;AAEO,IAAMA,4CAAkB,SAAlBA,eAAkB,CAACC,SAAD,EAAsC;AAAA,MAA1BC,gBAA0B,uEAAP,EAAO;;AACnE,MAAMC,UAAU,uBAAQF,SAAR,EAAmB;AAAA,WAAYG,SAASC,WAArB;AAAA,GAAnB,CAAhB;AACA,MAAMC,QAAQC,OAAOC,IAAP,CAAYL,OAAZ,EAAqBM,GAArB,CAAyB;AAAA,WAAON,QAAQO,GAAR,CAAP;AAAA,GAAzB,CAAd;AACA,MAAMC,SAASL,MAAMM,IAAN,CACb,UAACC,CAAD,EAAIC,CAAJ;AAAA,WAAU,IAAIC,IAAJ,CAASD,EAAE,CAAF,EAAKE,OAAd,IAAyB,IAAID,IAAJ,CAASF,EAAE,CAAF,EAAKG,OAAd,CAAnC;AAAA,GADa,CAAf;;AAIA,SAAOL,OAAOF,GAAP,CAAW,mBAAW;AAC3B,WAAO;AACLQ,UAAIC,QAAQ,CAAR,EAAWb,WADV;AAELc,gBAAU,EAFL;AAGLC,YAAMF,QAAQ,CAAR,EAAWE,IAHZ;AAILC,YAAMH,OAJD;AAKLI,mBAAapB,iBAAiBqB,IAAjB,CAAsB;AAAA,eAAmBC,gBAAgBP,EAAhB,KAAuBC,QAAQ,CAAR,EAAWb,WAArD;AAAA,OAAtB;AALR,KAAP;AAOD,GARM,CAAP;AASD,CAhBM;;AAkBA,IAAMoB,0CAAiB,SAAjBA,cAAiB,WAAY;AACxC,MAAMC,iBAAiB;AACrBT,QAAIb,SAAS,CAAT,EAAYuB,UADK;AAErBP,UAAMhB,SAAS,CAAT,EAAYgB,IAFG;AAGrBD,cAAUf,SAAS,CAAT,EAAYwB;AAHD,GAAvB;;AAMAF,iBAAeL,IAAf,GAAsBjB,SAASQ,IAAT,CAAc,UAACC,CAAD,EAAIC,CAAJ;AAAA,WAAUD,EAAEgB,KAAF,GAAUf,EAAEe,KAAtB;AAAA,GAAd,CAAtB;AACA,SAAOH,cAAP;AACD,CATM","file":"exercisesMapper.js","sourcesContent":["import groupBy from \"lodash/groupBy\";\n\nexport const exercisesMapper = (exercises, workoutExercises = []) => {\n  const grouped = groupBy(exercises, exercise => exercise.exercise_id);\n  const array = Object.keys(grouped).map(key => grouped[key]);\n  const sorted = array.sort(\n    (a, b) => new Date(b[0].updated) - new Date(a[0].updated)\n  );\n\n  return sorted.map(element => {\n    return {\n      id: element[0].exercise_id,\n      metaData: \"\",\n      name: element[0].name,\n      sets: element,\n      isInWorkout: workoutExercises.some(workoutExercise => workoutExercise.id === element[0].exercise_id)\n    };\n  });\n};\n\nexport const exerciseMapper = exercise => {\n  const returnExercise = {\n    id: exercise[0].exerciseId,\n    name: exercise[0].name,\n    metaData: exercise[0].body\n  };\n\n  returnExercise.sets = exercise.sort((a, b) => a.index > b.index);\n  return returnExercise;\n};\n"]}