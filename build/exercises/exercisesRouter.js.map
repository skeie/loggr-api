{"version":3,"sources":["../../server/exercises/exercisesRouter.js"],"names":["router","Router","service","findOne","req","res","next","getOne","params","id","then","json","data","postOne","errors","validate","send","body","exercise","userId","newExercise","catch","sendStatus","updateExercise","table","update","deleteExercise","delete","console","log","error","getAll","get","post","put","param","validationErrors","what","JSON","stringify","module","exports"],"mappings":"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","file":"exercisesRouter.js","sourcesContent":["import express from 'express';\nconst router = express.Router();\nimport Service from './exercisesService';\nimport {isEmpty} from 'lodash';\nconst service = new Service();\n\nconst findOne = (req, res, next) => {\n  service.getOne(req.params.id).then(data => {\n    res.json({data});\n  });\n};\n\nconst postOne = (req, res, next) => {\n  const errors = validate('exercise', req);\n  if (!isEmpty(errors)) {\n    res.send(400, errors);\n  }\n\n  service.postOne(req.body.exercise, req.params.userId)\n        .then(newExercise => {\n          res.json(newExercise);\n        }).catch(() => {\n          res.sendStatus(400);\n        });\n};\n\nconst updateExercise = (req, res, next) => {\n  const errors = validate('exercise', req);\n  if (!isEmpty(errors)) {\n    res.send(400, errors);\n  }\n  \n  const table = 'exercises';\n  service.update(req.params.id, req.body.exercise, table)\n        .then((data) => {\n          res.json(data);\n        }).catch(() => {\n          res.sendStatus(400);\n        });\n};\n\nconst deleteExercise = (req, res, next) => {\n  const table = 'exercises';\n  service.delete(req.params.id, table)\n        .then(() => {\n          res.sendStatus(201);\n        }).catch(error => {\n          console.log('error', error);\n          \n          res.sendStatus(400);\n        });\n};\n\nconst getAll = (req, res, next) => {\n  service.getAll()\n        .then(data => {\n          res.json({data});\n        }).catch(error => {\n          res.sendStatus(400);\n        });\n};\n\n// router.put('/:id/:index', updateExercise);\nrouter.delete('/:id', deleteExercise);\nrouter.get('/:id', findOne);\nrouter.get('/', getAll);\nrouter.post('/:userId', postOne);\nrouter.put('/:id', updateExercise);\n\nfunction validate(param, req) {\n  const errors = req.validationErrors();\n\n  if (errors) {\n    console.log({what: param, error: JSON.stringify(errors)});\n    return {...errors};\n  } else {\n    return {};\n  }\n}\n\nmodule.exports = router;\n"]}