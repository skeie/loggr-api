{"version":3,"sources":["../../server/exercises/exercisesService.js"],"names":["Service","dao","commonDao","getOne","id","getAll","userId","workoutDao","getCurrentWorkout","then","currentWorkout","postOne","exercise","postElement","element","update","object","table","delete","ExercisesDao","require","CommonDao","WorkoutDao"],"mappings":";;;;;;;;IAAqBA,O,GAEnB,iBAAYC,GAAZ,EAAiBC,SAAjB,EAA4B;AAAA;;AAAA;;AAAA,OAS5BC,MAT4B,GASnB,cAAM;AACb,WAAO,MAAKF,GAAL,CAASE,MAAT,CAAgBC,EAAhB,CAAP;AACD,GAX2B;;AAAA,OAa5BC,MAb4B,GAanB,UAACC,MAAD,EAAY;AACnB,WAAO,MAAKC,UAAL,CAAgBC,iBAAhB,CAAkCF,MAAlC,EACNG,IADM,CACD;AAAA,aAAkB,MAAKR,GAAL,CAASI,MAAT,CAAgBC,MAAhB,EAAwBI,cAAxB,CAAlB;AAAA,KADC,CAAP;AAGD,GAjB2B;;AAAA,OAmB5BC,OAnB4B,GAmBlB,UAACC,QAAD,EAAWN,MAAX,EAAsB;AAC9B,WAAO,MAAKL,GAAL,CAASU,OAAT,CAAiBC,QAAjB,EAA2BN,MAA3B,CAAP;AACD,GArB2B;;AAAA,OAuB5BO,WAvB4B,GAuBd,mBAAW;AACvB,WAAO,MAAKZ,GAAL,CAASY,WAAT,CAAqBC,OAArB,CAAP;AACD,GAzB2B;;AAAA,OA2B5BC,MA3B4B,GA2BnB,UAACX,EAAD,EAAKY,MAAL,EAAaC,KAAb,EAAuB;AAC9B,WAAO,MAAKf,SAAL,CAAea,MAAf,CAAsBX,EAAtB,EAA0BY,MAA1B,EAAkCC,KAAlC,EACNR,IADM,CACD;AAAA,UAAGL,EAAH,QAAGA,EAAH;AAAA,aAAY,MAAKD,MAAL,CAAYC,EAAZ,CAAZ;AAAA,KADC,CAAP;AAED,GA9B2B;;AAAA,OA+B5Bc,MA/B4B,GA+BnB,UAACd,EAAD,EAAKa,KAAL,EAAe;AACtB,WAAO,MAAKhB,GAAL,CAASiB,MAAT,CAAgBd,EAAhB,EAAoBa,KAApB,CAAP;AACD,GAjC2B;;AAC1B,MAAME,eAAelB,OAAOmB,QAAQ,gBAAR,CAA5B;AACA,MAAMC,YAAYnB,aAAakB,QAAQ,eAAR,CAA/B;AACA,MAAME,aAAaF,QAAQ,wBAAR,CAAnB;AACA,OAAKnB,GAAL,GAAW,IAAIkB,YAAJ,EAAX;AACA,OAAKjB,SAAL,GAAiB,IAAImB,SAAJ,EAAjB;AACA,OAAKd,UAAL,GAAkB,IAAIe,UAAJ,EAAlB;AACD,C;;kBATkBtB,O","file":"exercisesService.js","sourcesContent":["export default class Service {\n\n  constructor(dao, commonDao) {\n    const ExercisesDao = dao || require('./exercisesDao');\n    const CommonDao = commonDao || require('../common/dao');\n    const WorkoutDao = require('../workouts/workoutDao');\n    this.dao = new ExercisesDao();\n    this.commonDao = new CommonDao();\n    this.workoutDao = new WorkoutDao();\n  }\n\n  getOne = id => {\n    return this.dao.getOne(id);\n  }\n\n  getAll = (userId) => {\n    return this.workoutDao.getCurrentWorkout(userId)\n    .then(currentWorkout => this.dao.getAll(userId, currentWorkout))\n    \n  }\n\n  postOne = (exercise, userId) => {\n    return this.dao.postOne(exercise, userId);\n  }\n\n  postElement = element => {\n    return this.dao.postElement(element);\n  }\n\n  update = (id, object, table) => {\n    return this.commonDao.update(id, object, table)\n    .then(({ id }) => this.getOne(id));\n  }\n  delete = (id, table) => {\n    return this.dao.delete(id, table);\n  }\n\n}\n"]}