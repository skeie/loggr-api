{"version":3,"sources":["../../server/highscore/highscoreDao.js"],"names":["Dao","db","dao","getAll","query","then","data","catch","console","log","error","get","userId","create","highscore","one","id","message","require","CommonDao","commonDao","module","exports"],"mappings":";;;;IAAMA,G,GACF,aAAYC,EAAZ,EAAgBC,GAAhB,EAAqB;AAAA;;AAAA;;AAAA,SAMrBC,MANqB,GAMZ,YAAM;AACX,eAAO,MAAKF,EAAL,CACFG,KADE,oIAIFC,IAJE,CAIG;AAAA,mBAAQC,IAAR;AAAA,SAJH,EAKFC,KALE,CAKI,iBAAS;AACZC,oBAAQC,GAAR,CAAYC,KAAZ;AACA,mBAAOA,KAAP;AACH,SARE,CAAP;AASH,KAhBoB;;AAAA,SAkBrBC,GAlBqB,GAkBf,kBAAU;AACZ,eAAO,MAAKV,EAAL,CACFG,KADE,4MAOaQ,MAPb,EASFP,IATE,CASG,gBAAQ;AACV,mBAAOC,IAAP;AACH,SAXE,EAYFC,KAZE,CAYI,iBAAS;AACZ,mBAAOG,KAAP;AACH,SAdE,CAAP;AAeH,KAlCoB;;AAAA,SAoCrBG,MApCqB,GAoCZ,UAACD,MAAD,EAASE,SAAT,EAAuB;AAC5B,eAAO,MAAKb,EAAL,CACFc,GADE,CAEC,uEAFD,EAGC,CAACH,MAAD,EAASE,SAAT,CAHD,EAKFT,IALE,CAKG,gBAAiB;AAAA,gBAANW,EAAM,QAANA,EAAM;;AACnB,mBAAOA,EAAP;AACH,SAPE,EAQFT,KARE,CAQI,UAASG,KAAT,EAAgB;AACnBF,oBAAQC,GAAR,CAAY,QAAZ,EAAsBC,MAAMO,OAAN,IAAiBP,KAAvC,EADmB,CAC4B;AAClD,SAVE,CAAP;AAWH,KAhDoB;;AACjB,SAAKT,EAAL,GAAUA,MAAMiB,QAAQ,qBAAR,EAA+BjB,EAA/C;AACA,QAAMkB,YAAYjB,OAAOgB,QAAQ,eAAR,CAAzB;AACA,SAAKE,SAAL,GAAiB,IAAID,SAAJ,EAAjB;AACH,C;;AA+CLE,OAAOC,OAAP,GAAiBtB,GAAjB","file":"highscoreDao.js","sourcesContent":["class Dao {\n    constructor(db, dao) {\n        this.db = db || require('../lib/dbConnection').db;\n        const CommonDao = dao || require('../common/dao');\n        this.commonDao = new CommonDao();\n    }\n\n    getAll = () => {\n        return this.db\n            .query(\n                `select user_id as userId, highscore, name from highscore inner join users s on s.id = user_id  order by highscore desc limit 5;`\n            )\n            .then(data => data)\n            .catch(error => {\n                console.log(error);\n                return error;\n            });\n    };\n\n    get = userId => {\n        return this.db\n            .query(\n                `\n      WITH summary AS (\n        SELECT h.*,\n          ROW_NUMBER() OVER(ORDER BY highscore DESC) AS position FROM highscore h)\n        SELECT position FROM summary s\n        WHERE s.user_id = ${userId}`\n            )\n            .then(data => {\n                return data;\n            })\n            .catch(error => {\n                return error;\n            });\n    };\n\n    create = (userId, highscore) => {\n        return this.db\n            .one(\n                'insert into highscore(user_id, highscore) values($1, $2) returning id',\n                [userId, highscore]\n            )\n            .then(function({ id }) {\n                return id;\n            })\n            .catch(function(error) {\n                console.log('ERROR:', error.message || error); // print error;\n            });\n    };\n}\n\nmodule.exports = Dao;\n"]}