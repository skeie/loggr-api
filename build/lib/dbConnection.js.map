{"version":3,"sources":["../../server/lib/dbConnection.js"],"names":["pgp","require","cn","host","port","database","url","process","env","DATABASE_URL","db","pingPostgres","query","then","console","log","catch","err","module","exports"],"mappings":";;AAAA,IAAMA,MAAMC,QAAQ,YAAR,GAAZ;AACA,IAAMC,KAAK;AACTC,QAAM,WADG;AAETC,QAAM,IAFG;AAGTC,YAAU;AAHD,CAAX;AAKA,IAAMC,MAAOC,QAAQC,GAAR,CAAYC,YAAZ,IAA4B,WAAzC;AACA,IAAIC,KAAKV,IAAIM,GAAJ,CAAT;;AAEA,SAASK,YAAT,GAAwB;AACpB;AACFD,KAAGE,KAAH,iCACGC,IADH,CACQ,YAAM;AACVC,YAAQC,GAAR,CAAY,sBAAZ;AACD,GAHH,EAIGC,KAJH,CAIS,eAAO;AACZF,YAAQC,GAAR,CAAY,gCAAZ,EAA8CE,GAA9C;AACA,UAAMA,GAAN;AACD,GAPH;AAQD;;AAEDC,OAAOC,OAAP,GAAiB;AACfR,4BADe;AAEfD;AAFe,CAAjB","file":"dbConnection.js","sourcesContent":["const pgp = require('pg-promise')(/* options*/);\nconst cn = {\n  host: 'localhost',\n  port: 5432,\n  database: 'loggr'\n};\nconst url =  process.env.DATABASE_URL || 'localhost';\nvar db = pgp(url);\n\nfunction pingPostgres() {\n    // ping service\n  db.query(`SELECT 'DBD::Pg ping test'`)\n    .then(() => {\n      console.log('Postgres is running!');\n    })\n    .catch(err => {\n      console.log('Failed to connect to postgres ', err);\n      throw err;\n    });\n}\n\nmodule.exports = {\n  pingPostgres,\n  db\n};\n"]}