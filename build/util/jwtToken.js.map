{"version":3,"sources":["../../server/util/jwtToken.js"],"names":["generateToken","requireAuth","hasUserAuth","secret","user","sign","credentialsRequired","getToken","_fromHeaderOrQuerystring","req","res","next","token","urlUserId","params","userId","loggedInUserId","id","parseInt","message","status","headers","authorization","split"],"mappings":";;;;;;QAKgBA,a,GAAAA,a;QAQAC,W,GAAAA,W;QAQAC,W,GAAAA,W;;AArBhB;;;;AACA;;;;;;AAEO,IAAMC,0BAAS,iEAAf;;AAEA,SAASH,aAAT,CAAuBI,IAAvB,EAA6B;AAClC;AACA;AACA;;AAEA,SAAO,uBAASC,IAAT,CAAcD,IAAd,EAAoBD,MAApB,CAAP;AACD;;AAEM,SAASF,WAAT,GAAuB;AAC5B,SAAO,0BAAI;AACTE,kBADS;AAETG,yBAAqB,IAFZ;AAGTC,cAAUC;AAHD,GAAJ,CAAP;AAKD;;AAEM,SAASN,WAAT,CAAqBO,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,EAAqC;AAC1C,MAAMC,QAAQJ,0BAAd;AACA,MAAMK,YAAYJ,IAAIK,MAAJ,CAAWC,MAA7B;AACA,MAAMC,iBAAiBP,IAAIL,IAAJ,GAAWK,IAAIL,IAAJ,CAASa,EAApB,GAAyB,CAAhD;AACA,MAAIC,SAASL,SAAT,EAAoB,EAApB,MAA4BG,cAAhC,EAAgD;AAC9CL,SAAK;AACHQ,eAAS,+CADN;AAEHC,cAAQ;AAFL,KAAL;AAID,GALD,MAKO;AACLT;AACD;AACF;;AAED,SAASH,wBAAT,CAAkCC,GAAlC,EAAuCC,GAAvC,EAA4C;AAC1C,MACED,IAAIY,OAAJ,CAAYC,aAAZ,IACEb,IAAIY,OAAJ,CAAYC,aAAZ,CAA0BC,KAA1B,CAAgC,GAAhC,EAAqC,CAArC,MAA4C,QAFhD,EAGE;AACA,WAAOd,IAAIY,OAAJ,CAAYC,aAAZ,CAA0BC,KAA1B,CAAgC,GAAhC,EAAqC,CAArC,CAAP;AACD;AACF","file":"jwtToken.js","sourcesContent":["import jwtToken from \"jsonwebtoken\";\nimport jwt from \"express-jwt\";\n\nexport const secret = \"qQDI9AO4LtMFC9NDMw9cM9PrFtEgkugW8Yie8R11LzzkNyjyLX1bmEKhoRoMKPm\";\n\nexport function generateToken(user) {\n  // if (!opts.neveExpire) {\n  //     tokenOpts.expiresIn = config.token.expires;\n  // }\n\n  return jwtToken.sign(user, secret);\n}\n\nexport function requireAuth() {\n  return jwt({\n    secret,\n    credentialsRequired: true,\n    getToken: _fromHeaderOrQuerystring\n  });\n}\n\nexport function hasUserAuth(req, res, next) {\n  const token = _fromHeaderOrQuerystring();\n  const urlUserId = req.params.userId;\n  const loggedInUserId = req.user ? req.user.id : 0;\n  if (parseInt(urlUserId, 10) !== loggedInUserId) {\n    next({\n      message: \"User is not authorized to perform this action\",\n      status: 401\n    });\n  } else {\n    next();\n  }\n}\n\nfunction _fromHeaderOrQuerystring(req, res) {\n  if (\n    req.headers.authorization &&\n      req.headers.authorization.split(\" \")[0] === \"Bearer\"\n  ) {\n    return req.headers.authorization.split(\" \")[1];\n  }\n}\n"]}